#!/bin/bash

TARGET="./singlefile/rsa-crypt.cpp"
[ ! -d "$(dirname $TARGET)" ] && mkdir -pv "$(dirname $TARGET)"

files=(
    "bigint/BigInt.h"
    "bigint/BigIntHelpers.h"
    "App.h"
    "bigint/BigInt.cpp"
    "bigint/BigIntHelpers.cpp"
    "App.cpp"
    "main.cpp"
)

includes=(
    iostream
    string
    sstream
    fstream
    vector
    map
    algorithm
    cassert
    ctime
)

print_title() {
    LENGTH=77
    echo -n "// "
    if [ ${#1} -ge $LENGTH ]; then
        echo -n "=== ${1} ==="
    elif [ ${#1} -eq 0 ]; then
        printf "%*s" $LENGTH "=" | tr ' ' '='
    else
        printf "%*s%*s" $(( (${#1} + 4 + $LENGTH) / 2)) "__${1// /$}__" $(( $LENGTH - (${#1} + 4 + $LENGTH) / 2)) "=" | tr ' _$' '=  '
    fi
    echo
}

# Header
echo -n """\
/*
 * Author: Amr Alaa
 *
 * WARNING: Auto generated file. All changes will be lost!
 *
 */
""" > "$TARGET"

# Preprocessor
echo >> "$TARGET"
print_title >> "$TARGET"
print_title "BEGIN Preprocessor" >> "$TARGET"
echo >> "$TARGET"
echo "#define NDEBUG" >> "$TARGET"
echo >> "$TARGET"
for i in "${includes[@]}"; do
    echo "#include <$i>" >> "$TARGET"
done
echo "using namespace std;" >> "$TARGET"
echo >> "$TARGET"
print_title "END Preprocessor" >> "$TARGET"
print_title >> "$TARGET"

# Source/Header files
for f in "${files[@]}"; do
    echo >> "$TARGET"
    print_title >> "$TARGET"
    print_title "BEGIN FILE $f" >> "$TARGET"
    echo >> "$TARGET"
    cat "./src/main/$f" >> "$TARGET"
    echo >> "$TARGET"
    print_title "END FILE $f" >> "$TARGET"
    print_title >> "$TARGET"
done

# Remove assertions
# cat "$TARGET" | grep -Pv '\s*assert\(' > "${TARGET}.tmp"
# mv -f "${TARGET}.tmp" "${TARGET}"
